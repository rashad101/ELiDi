from argparse import ArgumentParser


def get_args():
    parser = ArgumentParser(description="Joint Prediction")
    parser.add_argument('--entity_detection_mode', type=str, required=False, help='options are LSTM, GRU', default='LSTM')
    parser.add_argument('--no_cuda', action='store_false', help='do not use cuda', dest='cuda')
    parser.add_argument('--gpu', type=bool, default=False)
    parser.add_argument('--epochs', type=int, default=30)
    parser.add_argument('--batch_size', type=int, default=20)
    parser.add_argument('--dataset', type=str, default="sq", help="use sq or webqsp")
    parser.add_argument('--lr', type=float, default=0.001)
    parser.add_argument('--seed', type=int, default=3435)
    parser.add_argument('--dev_every', type=int, default=2000)
    parser.add_argument('--log_every', type=int, default=1000)
    parser.add_argument('--patience', type=int, default=10)
    parser.add_argument('--save_path', type=str, default='saved_checkpoints')
    parser.add_argument('--specify_prefix', type=str, default='id1')
    parser.add_argument('--words_dim', type=int, default=300)
    parser.add_argument('--num_layer', type=int, default=2)
    parser.add_argument('--rnn_fc_dropout', type=float, default=0.3)
    parser.add_argument('--input_size', type=int, default=300)
    parser.add_argument('--hidden_size', type=int, default=300)
    parser.add_argument('--rnn_dropout', type=float, default=0.3)
    parser.add_argument('--clip_gradient', type=float, default=0.6, help='gradient clipping')
    parser.add_argument('--vector_cache', type=str, default="./data/sq_glove300d.pt")
    parser.add_argument('--rel2id_f', type=str, default="./data/FB2M/reln2id.json")
    parser.add_argument('--entity2id_f', type=str, default="./data/FB2M/ent2emb_id.json")
    parser.add_argument('--entity2label', type=str, default="./data/freebase_names/ent2name.json")
    parser.add_argument('--entity_kg_vec', type=str, default="./data/FB2M/entity2vec.vec")
    parser.add_argument('--entity_1hop', type=str, default="./data/FB2M/entity_1hop_buba.npy")
    parser.add_argument('--entity_fb2w_map', type=str, default="./data/fb2w_id.pkl")
    parser.add_argument('--rel_kg_vec', type=str, default="./data/FB2M/relation2vec.vec")
    parser.add_argument('--kg_embed', type=str, default="./data/transe_embeddings.npz")
    parser.add_argument('--weight_decay',type=float, default=0)
    parser.add_argument('--fix_embed', action='store_false', dest='train_embed')
    parser.add_argument('--eval_only', action='store_true')
    parser.add_argument('--hits', type=int, default=100)
    parser.add_argument('--no_tqdm', default=False, action='store_true', help='disable tqdm progress bar')
    parser.add_argument('--randseed', type=int, default=666, metavar='', help='random seed (default: 666)')
    parser.add_argument('--trained_model', type=str, default='')
    parser.add_argument('--data_dir', type=str, default='./data/processed_simplequestions_dataset/')
    parser.add_argument('--results_path', type=str, default='query_text')
    parser.add_argument('--relation_prediction_mode', type=str, default='GRU')
    parser.add_argument('--emb_drop', type=float, default=0.2)
    parser.add_argument('--threshold', type=float, default=0.5)
    args = parser.parse_args()
    return args
